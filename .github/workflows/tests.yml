# Workflow para executar testes automatizados
# Triggrado em push e pull requests para qualquer branch
name: Tests

# Eventos que acionam o workflow
on:
  # Executa em push para qualquer branch
  push:
    branches: ['*']
  # Executa em pull requests para qualquer branch
  pull_request:
    branches: ['*']

# Configurações globais
env:
  # Configurações do Node.js
  NODE_VERSION: '20'
  # Variáveis de ambiente para os testes
  NODE_ENV: test
  BEARER_AUTH_KEY=1234567890
  DATABASE_URL: 'mysql://campaign_user:campaign_password@localhost:3306/campaigns'

# Jobs do workflow
jobs:
  # Job principal para executar os testes
  tests:
    # Sistema operacional: Ubuntu (conforme especificado)
    runs-on: ubuntu-latest

    # Serviços necessários para os testes (MySQL)
    services:
      mysql:
        # Imagem do MySQL 8.0
        image: mysql:8.0
        # Variáveis de ambiente do MySQL
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: campaigns
          MYSQL_USER: campaign_user
          MYSQL_PASSWORD: campaign_password
        # Configurações de porta e health check
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -prootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    # Etapas do job
    steps:
      # 1. Fazer checkout do código do repositório
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      # 2. Configurar Node.js com cache automático do npm
      - name: 🔧 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          # Cache automático das dependências do npm
          cache: 'npm'

      # 3. Instalar dependências do projeto
      - name: 📦 Instalar dependências
        run: |
          echo "🔄 Instalando dependências do projeto..."
          npm ci
          echo "✅ Dependências instaladas com sucesso!"

      # 4. Gerar cliente Prisma
      - name: 🗄️ Gerar cliente Prisma
        run: |
          echo "🔧 Gerando cliente Prisma..."
          npm run db:generate
          echo "✅ Cliente Prisma gerado com sucesso!"

      # 5. Executar migrations do banco de dados
      - name: 🚀 Executar migrations do banco
        run: |
          echo "🔄 Executando migrations do banco de dados..."
          npm run db:migrate:deploy
          echo "✅ Migrations executadas com sucesso!"

      # 6. Executar testes automatizados
      - name: 🧪 Executar testes automatizados
        run: |
          echo "🚀 Iniciando execução dos testes..."
          npm run test
          echo "🎉 Testes executados com sucesso!"

      # 7. Upload dos resultados em caso de falha (opcional)
      - name: 📊 Upload de logs em caso de falha
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            *.log
            coverage/
          retention-days: 7
