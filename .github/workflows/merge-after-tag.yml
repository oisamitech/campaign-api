name: 'Merge Main to Development after Release'

on:
  workflow_run:
    workflows: ['Automatic create tag version']
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  merge-main-to-development:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.AUTOMATION }}

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get latest tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Check if tag was created on main
        id: check-branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ steps.get-latest-tag.outputs.latest_tag }})
          TAG_BRANCH=$(git branch -r --contains $TAG_COMMIT | grep -E 'origin/(main|master)' || echo "")

          echo "TAG_COMMIT: $TAG_COMMIT"
          echo "TAG_BRANCH: $TAG_BRANCH"

          if [[ -n "$TAG_BRANCH" ]]; then
            echo "is_main_tag=true" >> $GITHUB_OUTPUT
          else
            echo "is_main_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge main to development
        if: steps.check-branch.outputs.is_main_tag == 'true'
        run: |
          echo "Merging main to development after tag ${{ steps.get-latest-tag.outputs.latest_tag }}..."
          git checkout development
          git pull origin development
          git merge --no-ff origin/main -m "chore: merge main into development after release ${{ steps.get-latest-tag.outputs.latest_tag }} [skip ci]"
          git push origin development
